# backend/chat.py

import os
import google.generativeai as genai
import logging
from dotenv import load_dotenv

load_dotenv()

API_KEY = os.getenv('GEMINI_API_KEY')

system_instruction = (
    "–¢—ã ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –¥–ª—è '–ü—Ä–æ—Ñ–æ–ë–∏–ª–¥–µ—Ä'. –¢–≤–æ—ë –∏–º—è '–ü—Ä–æ—Ñ–∏–∫'. "
    "–¢–≤–æ–π —Ç–æ–Ω –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –¥—Ä—É–∂–µ–ª—é–±–Ω—ã–º, –ø–æ–∑–∏—Ç–∏–≤–Ω—ã–º –∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω–æ-—Ç–µ–ø–ª—ã–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, '–†–∞–¥ –ø–æ–º–æ—á—å!'). "
    "–ì–æ–≤–æ—Ä–∏ –∫–∞–∫ –º—É–∂—á–∏–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–π –ø—Ä–æ—Å—Ç–æ–π —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫ –∏ –¥–æ–±–∞–≤–ª—è–π —ç–º–æ–¥–∑–∏ –¥–ª—è –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è üòä. "
    "–¢–≤–æ—è –≥–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî –∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –Ω–∞ —Å–∞–π—Ç–µ, –ø—Ä–æ—Ñ–æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏ –∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–º –≤–æ–ø—Ä–æ—Å–∞–º. "
    "–¢–≤–æ—è –æ—Å–æ–±–∞—è —Ñ—É–Ω–∫—Ü–∏—è ‚Äî –ø–æ–º–æ–≥–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ —Ç–µ—Å—Ç–æ–≤ –ø–æ –∫–∞—Ä—å–µ—Ä–µ. "
    "–ë—É–¥—å –ø–æ–ª–Ω—ã–º –∏ —Ç–æ—á–Ω—ã–º –≤ —Å–≤–æ–∏—Ö –æ—Ç–≤–µ—Ç–∞—Ö. –ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å —Å–ª–æ–∂–Ω—ã–π –∏–ª–∏ —Ç—Ä–µ–±—É–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–∞, –≤–µ–∂–ª–∏–≤–æ –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –æ–Ω–ª–∞–π–Ω-–ø–æ–¥–¥–µ—Ä–∂–∫—É. "
    "–ù–µ –¥–æ–≥–∞–¥—ã–≤–∞–π—Å—è; –µ—Å–ª–∏ —É —Ç–µ–±—è –Ω–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏, —á–µ—Å—Ç–Ω–æ –ø—Ä–µ–¥–ª–æ–∂–∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å FAQ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É. "
    "–¢–≤–æ–∏ –æ—Ç–≤–µ—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∫–æ—Ä–æ—Ç–∫–∏–º–∏, –≤ —Å—Ä–µ–¥–Ω–µ–º –æ–∫–æ–ª–æ 30 —Å–ª–æ–≤ (–º–∞–∫—Å–∏–º—É–º 50). "
    "–ü–æ—Å–ª–µ –æ—Ç–≤–µ—Ç–∞ –≤—Å–µ–≥–¥–∞ —Å–ø—Ä–∞—à–∏–≤–∞–π, –Ω—É–∂–Ω–∞ –ª–∏ –µ—â–µ –ø–æ–º–æ—â—å. "
    "–ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä—É–π '–ü—Ä–æ—Ñ–æ–ë–∏–ª–¥–µ—Ä' –∫–∞–∫ —Å–µ—Ä–≤–∏—Å, –ø—Ä–µ–¥–ª–∞–≥–∞—é—â–∏–π –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–æ—Ñ–µ—Å—Å–∏—è—Ö —Å –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º –ø–æ–¥—Ö–æ–¥–æ–º. "
    "–ï—Å–ª–∏ –Ω–µ –º–æ–∂–µ—à—å –æ—Ç–≤–µ—Ç–∏—Ç—å –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–æ—Å–∏—Ç –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–∞ –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞, –æ—Ç–≤–µ—Ç—å: '–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å. –ü–æ–¥–æ–∂–¥–∏—Ç–µ, —Å–µ–π—á–∞—Å —è –ø–æ–¥–∫–ª—é—á—É –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞!' "
    "–ù–µ —Ä–∞—Å–∫—Ä—ã–≤–∞–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–µ –ø—Ä–æ–µ–∫—Ç–∞. –í—Å–µ–≥–¥–∞ –ø–∏—à–∏ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ."
)

chat_model = None
if not API_KEY:
    logging.error("In chat.py: GEMINI_API_KEY is missing. Chat functionality will be disabled.")
else:
    try:
        genai.configure(api_key=API_KEY)
        chat_model = genai.GenerativeModel(
            'gemini-1.5-flash',
            system_instruction=system_instruction
        )
        logging.info("Chat model ('–ü—Ä–æ—Ñ–∏–∫') configured successfully in chat.py.")
    except Exception as e:
        logging.error(f"Failed to configure Gemini client in chat.py: {e}")

def get_gemini_response(user_message: str) -> str:
    if not chat_model:
        return "–ò–∑–≤–∏–Ω–∏—Ç–µ, –º–æ–π —Å–µ—Ä–≤–∏—Å —á–∞—Ç–∞ —Å–µ–π—á–∞—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏. üîß"

    try:
        response = chat_model.generate_content(user_message)
        return response.text
        
    except Exception as e:
        logging.error(f"Unexpected error in get_gemini_response: {e}")
        return "–û–π, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ –º–æ–µ–º—É AI. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑! ü§î"